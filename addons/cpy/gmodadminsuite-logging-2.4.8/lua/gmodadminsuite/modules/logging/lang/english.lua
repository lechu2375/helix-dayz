return {
	Name = "English",
	Flag = "flags16/gb.png",
	Phrases = function() return {

		module_name = "Billy's Logs",

		--####################### UI PHRASES #######################--

		no_data                     = "No data",
		add_to_evidence_box         = "Add to Evidence Box",
		livelogs_show_logs_for      = "Show Logs For",
		background_color            = "Background Color",
		health_abbrieviated         = "%d HP",
		livelogs                    = "Live Logs",
		exit_deep_storage           = "Exit Deep Storage",
		log_formatting              = "Log Formatting",
		strings                     = "Strings",
		when                        = "When",
		copy_log                    = "Copy Log",
		evidence_box                = "Evidence Box",
		livelogs_position_x         = "X Position (pixels)",
		width                       = "Width",
		color                       = "Color",
		help                        = "Help",
		apply_filter                = "Apply Filter",
		live_log_antispam           = "< discarded live log for antispam >",
		settings                    = "Settings",
		loading_ellipsis            = "Loading...",
		livelogs_enabled            = "Enable Live Logs",
		armor_abbrieviated          = "%d ARM",
		deep_storage                = "Deep Storage",
		all_logs                    = "All Logs",
		logs                        = "Logs",
		padding                     = "Padding (pixels)",
		livelogs_position_y         = "Y Position (pixels)",
		livelogs_rows_help          = "What is the maximum amount of logs that should be displayed?",
		livelogs_rows               = "Rows (Log Amount)",
		livelogs_color_help         = "Should logs be displayed in color?",
		export_to_clipboard         = "Export to clipboard",
		players                     = "Players",
		script_page                 = "Script Page",
		wiki                        = "Wiki",
		module                      = "Module",
		modules                     = "Modules",
		localization                = "Localization",
		view_deep_storage           = "View Deep Storage",
		copied                      = "Copied!",
		operator                    = "Operator",
		log                         = "Log",
		reset_to_defaults           = "Reset to Defaults",
		livelogs_show_logs_for_help = "How many seconds should logs be shown for?\nSet to 0 for forever.",
		advanced_search             = "Advanced Search",
		quick_search                = "Quick Search",
		quick_search_ellipsis       = "Quick Search...",
		entities                    = "Entities",
		tutorial                    = "Tutorial",
		clear_filters               = "Clear Filters",
		clear_filter                = "Clear Filter",
		manual_steamid_ellipsis     = "Manual SteamID...",
		no_results_found            = "No results found",
		add_player                  = "+ Add Player",
		add_module                  = "+ Add Module",
		add_entity                  = "+ Add Entity",
		add_string                  = "+ Add String",
		modules_search_tooltip      = "What module(s) do you want to include? (leave blank for any module)",
		players_search_tooltip      = "What player(s) are you looking for? (leave blank for any player)",
		entities_search_tooltip     = "What entities(s) are you looking for? (SWEPs, SENTs, vehicles, props, classes, etc.)",
		strings_search_tooltip      = "Is there any specific text that you are looking for?",
		class_name_ellipsis         = "Class name...",
		add_string_popup_title      = "Add String",
		add_string_popup_text       = "Enter the text you're trying to find.",
		text_ellipsis               = "Text...",
		click_to_focus              = "Click to focus",
		right_click_to_focus        = "Right click to focus",
		highlight_color             = "Highlight Color",
		weapon_color                = "Weapon Color",
		money_color                 = "Money Color",
		vehicle_color               = "Vehicle Color",
		entity_color                = "Entity Color",
		health_color                = "Health Color",
		armor_color                 = "Armor Color",
		usergroup_color             = "Usergroup Color",
		unavailable_color           = "Unavailable/Unknown Color",
		learn_more                  = "Learn more",
		player_combats              = "Player Combats",
		took_damage                 = "[took %d dmg]",
		open_pvp_event_report       = "Open PvP Event Report",
		remove                      = "Remove",
		greedy                      = "Greedy",
		greedy_tip                  = "If your search is greedy, it will attempt to match as many logs as possible. If it's not greedy, it will attempt to match as little logs as possible.",
		log_colouring               = "Log Coloring",
		done_exclamation            = "Done!",
		module_settings             = "Module Settings",
		storage_settings            = "Storage Settings",
		third_party_addons          = "Third Party Addons",
		pvp_settings                = "PvP Logging Settings",
		live_logs_settings          = "Live Logs Settings",
		logging_settings            = "Logging Settings",
		enabled_modules             = "Enabled Modules",
		permissions                 = "Permissions",
		gamemode_modules            = "Gamemode Modules",
		saved_exclamation           = "Saved!",
		save_settings               = "Save Settings",
		weapon_class                = "Weapon class",
		enter_weapon_class          = "Enter the class name of the weapon.\nDon't know it? Open your spawn menu, right click a weapon and click \"Copy to clipboard\"",
		save                        = "Save",
		add_new                     = "+ Add New",
		enabled                     = "Enabled",
		website                     = "Website",
		name                        = "Name",
		usergroups                  = "Usergroups",
		everyone                    = "Everyone",
		all_modules                 = "All modules",
		all_teams                   = "All teams",
		add_usergroup               = "Add Usergroup",
		cl_sv_tooltip               = [[cl represents the time taken for your computer to request logs, receive them, process them and display them
		
		sv represents the time taken for the server to retrieve logs from memory/the database, process them and then send them to you

		Servers using MySQL will see a higher sv value due to the latency between the MySQL server and Garry's Mod]],
		deep_storage_help           = [[Deep Storage is a bLogs feature that improves performance by storing logs from previous server sessions separately from the current session's.

		After clicking "View Deep Storage", you will only see logs from previous server sessions.
		You can view the current session's logs by clicking the button below again or reopening the menu.

		NOTE: Damage logs are not included in deep storage and are deleted on every restart to save disk space]],

		damage = "Damage",

		class_type_other = "Other",
		class_type_player = "Player",
		class_type_team = "Team",
		class_type_weapon = "Weapon",
		class_type_vehicle = "Vehicle",
		class_type_damage = "Damage Type",
		class_type_usergroup = "Usergroup",
		class_type_prop = "Prop",
		class_type_ragdoll = "Ragdoll",
		class_type_country = "Country",
		class_type_ammo = "Ammo",
		class_type_role = "Role",
		class_type_entity = "Entity",
		class_selector = "Class Selector",
		custom_class = "Custom Class",
		class_type = "Class Type",
		value = "Value",
		search = "Search",
		check_all = "Check All",
		uncheck_all = "Uncheck All",
		general = "General",
		class_search_title = "Class Search",
		class_search_text = "Enter the name or part of a name of the class that you're looking for (case insensitive)",
		view_logs = "View Logs",
		open_menu = "Open Menu",
		licensed_to = "Licensed to %s",

		pvp_event_report = "PvP Event Report",
		victim = "Victim",
		instigator = "Instigator",
		victim_tag_tip = "This is the person who the instigator started the combat against",
		instigator_tag_tip = "This is the person who started the combat",
		victim_abbr = "V",
		instigator_abbr = "I",
		time = "Time",
		linked_events = "Linked Events",

		deleted_team = "(DELETED TEAM)",

		unknown = "Unknown",
		cancel = "Cancel",

		deep_storage_advanced_search_warning = "WARNING: Advanced Search actually searches Deep Storage internally for performance reasons, which means recently created logs will not be found by Advanced Search for a short period of time.",

		--####################### SETTINGS #######################--

		Player_RecordTeam = "Show player team in logs",
		Player_RecordUsergroup = "Show player usergroup in logs",
		Player_RecordHealth = "Show player health in logs",
		Player_RecordArmor = "Show player armor in logs",
		Player_RecordWeapon = "Show player weapon in logs",
		Player_RecordWeapon_DoNotRecord = "Player weapon filter",
		Player_RecordWeapon_DoNotRecord_help = "If you want to show player weapons in the logs, use this option to filter weapons you don't want to see (such as physgun, toolgun, etc.)",

		OverrideMoneyFormat = "Override default money formatting",
		OverrideMoneyFormat_help = "When this is off, the gamemode's money formatting will be used.\nWhen this is on, you can use the option below to make your own money format.",
		MoneyFormat = "Money Format",
		MoneyFormat_help = "Enter how you want money to appear, and insert \"%s\" (without quotes) where you want the number of money to appear.",

		DeepStorageEnabled = "Deep Storage enabled",
		DeepStorageEnabled_help = "Disabling Deep Storage can significantly improve performance on servers that are not using MySQL.",

		DeepStorageCommitOnShutdown = "Commit Deep Storage on server shutdown",
		DeepStorageCommitOnShutdown_help = "If enabled, any deep storage logs that haven't been committed to the database will be committed on server shutdown/map change, but this can cause that operation to hang",

		DeepStorageCommitPeriod = "Deep storage commit period",
		DeepStorageCommitPeriod_help = "How often (in seconds) should deep storage logs be committed to the database? This setting does nothing without MySQL.",

		DeepStorageTooOld = "Max age of deep storage logs",
		DeepStorageTooOld_help = "How many days old can a log in deep storage be before it is deleted? (saves disk space)\nSet to 0 to never delete logs in deep storage.",

		LiveLogsEnabled = "Live Logs Enabled",
		LiveLogsEnabled_help = "Live logs can be a performance hit for large servers; you can disable the feature completely here.",
		LiveLogsIn10Seconds = "Max live logs in 10 seconds",
		LiveLogsIn10Seconds_help = "How many live logs can be sent before additional logs are blocked for antispam?",
		NotifyLiveLogsAntispam = "Notify antispam",
		NotifyLiveLogsAntispam_help = "Should users be notified that a live log has been discarded for antispam?",

		TimeBetweenPvPEvents = "Time between PvP events",
		TimeBetweenPvPEvents_help = "When players start combat, it creates a \"PvP event\", when no further combat has occured in a certain amount of seconds, the PvP event is treated as finished and committed to the logs. How many seconds should bLogs wait before doing this?",
		NonPvPWeapons = "PvP weapons filter",
		NonPvPWeapons_help = "What weapons shouldn't be treated as PvP weapons?",

		server_restart_required = "NOTE: Changes to these settings will apply after a server restart.",

		gamemode_modules_tip = [[bLogs supports a plethora of gamemodes.
		However, sometimes bLogs may have trouble detecting whether you are running a certain gamemode.
		In this screen, you can force bLogs to think that you are running a certain gamemode.

		Unchecked = Default behaviour
		Checked = Forced on
		Crossed = Forced off

		Please note that some gamemodes DERIVE from Sandbox, this means they use Sandbox's spawn menu, toolgun, etc.
		For gamemodes like DarkRP which derive from Sandbox, it is recommended that you leave Sandbox to its default detection.]],

		third_party_addons_tip = [[bLogs supports a plethora of third party addons.
		However, sometimes bLogs may have trouble detecting whether you have a certain third party addon installed.
		In this screen, you can force bLogs to think that you have certain third party addons installed.

		Unchecked = Default behaviour
		Checked = Forced on
		Crossed = Forced off]],

		edit_discord_webhooks = "Edit Discord Webhooks",
		webhook_name = "Webhook Name",
		webhook_name_tip = "Enter the name of your webhook.\nThis is just an identifier for the webhook, you'll enter the URL in the next screen.",
		webhook = "Webhook",
		webhook_url = "Webhook URL",
		webhook_url_tip = "Copy the URL of your Discord webhook and paste it here.",
		copy_webhook = "Copy Webhook",

		can_access_module = "Can Access Module",
		can_access_all_modules = "Can Access ALL Modules",
		all_usergroups = "All usergroups",
		all_jobs_in_category = "All jobs in category",
		all_teams_in_category = "All teams in category",
		teams = "Teams",
		permissions_tip = "Unchecked = Inherits from \"%s\"\nChecked = Allowed to use module\nCrossed = Forbidden to use module",
		all_modules_tip = "Permissions are inherited from this section unless overrided.",

		wipes_and_resets = "Wipes & Resets", -- wipes as in data wipes
		disable_buttons = "Disable Buttons",
		enable_buttons = "Enable Buttons",
		wipe_deepstorage = "Wipe Deep Storage",
		wipe_session = "Wipe Session Logs",
		wipe_all_logs = "Wipe All Logs",
		reset_config = "Reset config",

		vehicle_driver = "Driver:",
		data = "Data",
		weapons = "Weapons",
		props = "Props",
		ragdolls = "Ragdolls",
		money = "Money",
		countries = "Countries",
		ammo = "Ammo",
		roles = "Roles",
		vehicles = "Vehicles",

		flag_ongoing = "Ongoing Event",
		flag_finished = "Event Finished",
		flag_superadmin = "Involves Superadmin",
		flag_admin = "Involves Admin",
		flag_friendly_fire = "Friendly Fire",
		flag_law_enforcement = "Involves Law Enforcement",
		flag_instigator_death = "Instigator Died",
		flag_victim_death = "Victim Died",
		flag_vehicle = "Involves Vehicle(s)",
		flag_world = "Involves the Map",
		flag_props = "Involves Props",
		flag_team_switched = "Team Switch Occured",
		flag_disconnect = "Player Disconnected During Combat",
		flag_linked = "Linked to Other PvP Events",

		event_start = "Event Start",
		event_end = "Event End",

		dead_tag = "[DEAD]",

		DmgTooltip_Victim = "% of total PvP event damage VICTIM was responsible for",
		DmgTooltip_Instigator = "% of total PvP event damage INSTIGATOR was responsible for",
		DmgTooltip_Other = "% of total PvP event damage which is miscellaneous",

		--####################### LOG PHRASES #######################--
		Logs = {
			round_start     = "ROUND START",
			round_preparing = "PREPARING ROUND",
			round_end       = "ROUND ENDED",

			connected                                      = "{1} connected",
			connected_from_country                         = "{1} connected from {2}",
			finished_connecting                            = "{1} finished connecting",
			respawned                                      = "{1} respawned",
			disconnected                                   = "{1} disconnected ({2})",
			picked_up_weapon                               = "{1} picked up weapon {2}",
			picked_up_item                                 = "{1} picked up item {2}",
			prop_killed_self                               = "{1} killed themselves with their prop {2}",
			prop_killed_other                              = "{1} was killed by prop created by {2} ({3})",
			prop_killed_world                              = "{1} was killed by world prop {2}",
			prop_damaged_self                              = "{1} damaged themselves for {2} damage with their prop {3}",
			prop_damaged_other                             = "{1} was damaged by prop created by {2} for {3} damage ({4})",
			prop_damaged_world                             = "{1} was damaged by world prop {2} for {3} damage",
			toolgun_used_their_ent                         = "{1} used tool {2} on their {3}",
			toolgun_used_other_ent                         = "{1} used tool {2} on {3} created by {4}",
			toolgun_used_world_ent                         = "{1} used tool {2} on {3}",
			spawned_effect                                 = "{1} spawned effect {2}",
			spawned_npc                                    = "{1} spawned NPC {2}",
			spawned_prop                                   = "{1} spawned prop {2}",
			spawned_ragdoll                                = "{1} spawned ragdoll {2}",
			spawned_sent                                   = "{1} spawned SENT {2}",
			spawned_swep                                   = "{1} spawned SWEP {2}",
			spawned_vehicle                                = "{1} spawned vehicle {2}",
			steam_name_changed                             = "{1} changed their Steam name from {2} to {3}",
			weapon_switched                                = "{1} switched weapons from {2} to {3}",
 
			murder_loot                                    = "{1} picked up loot",
 
			cinema_video_queued                            = "[{1}] {2} queued [{3}] \"{4}\" {5}",
 
			ttt_win_traitor                                = "Traitors win!",
			ttt_win_innocent                               = "Innocent win!",
			ttt_win_timelimit                              = "Innocent win - time limit reached!",
			ttt_bought                                     = "{1} bought {2}",
			ttt_karma                                      = "{1} was KICKED for low karma",
			ttt_foundbody                                  = "{1} found the body of {2}",
			ttt_founddna                                   = "{1} found the DNA of {2} on their {3}",
			ttt_founddna_corpse                            = "{1} found the DNA of {2} on their corpse",
 
			darkrp_agenda_updated                          = "{1} updated the {2} agenda to: {3}",
			darkrp_agenda_removed                          = "{1} removed the {2}",
			darkrp_arrest                                  = "{1} arrested {2}",
			darkrp_unarrest                                = "{1} released {2}",
			darkrp_batteringram_owned_success              = "{1} battering rammed the {2} of {3}",
			darkrp_batteringram_owned_door_success         = "{1} battering rammed the door of {2}",
			darkrp_batteringram_success                    = "{1} battering rammed an unowned {2}",
			darkrp_batteringram_door_success               = "{1} battering rammed an unowned door",
			darkrp_batteringram_owned_failed               = "{1} failed to battering ram the {2} of {3}",
			darkrp_batteringram_owned_door_failed          = "{1} failed to battering ram the door of {2}",
			darkrp_batteringram_failed                     = "{1} failed to battering ram an unowned {2}",
			darkrp_batteringram_door_failed                = "{1} failed to battering ram an unowned door",
			darkrp_cheque_dropped                          = "{1} dropped a cheque of {2} for {3}",
			darkrp_cheque_picked_up                        = "{1} cashed a cheque of {2} from {3}",
			darkrp_cheque_tore_up                          = "{1} tore up a cheque of {2} meant for {3}",
			darkrp_demoted                                 = "{1} demoted {2} for {3}",
			darkrp_demoted_afk                             = "{1} was demoted for being AFK",
			darkrp_door_sold                               = "{1} sold a door",
			darkrp_door_bought                             = "{1} bought a door",
			darkrp_money_dropped                           = "{1} dropped {2}",
			darkrp_money_picked_up                         = "{1} picked up {2}",
			darkrp_money_picked_up_owned                   = "{1} picked up {2} dropped by {3}",
			darkrp_hit_accepted                            = "{1} accepted a hit on {2} requested by {3}",
			darkrp_hit_completed                           = "{1} completed a hit on {2} which was requested by {3}",
			darkrp_hit_failed                              = "{1} failed a hit on {2} because {3}",
			darkrp_hit_requested                           = "{1} requested a hit on {2} through {3} for {4}",
			darkrp_job_changed                             = "{1} changed from {2} to {3}",
			darkrp_law_added                               = "{1} added law: {2}",
			darkrp_law_removed                             = "{1} removed law: {2}",
			darkrp_purchase                                = "{1} purchased {2} for {3}",
			darkrp_purchase_ammo                           = "{1} purchased {2} ammo for {3}",
			darkrp_purchase_shipment                       = "{1} purchased a shipment of x{2} {3} for {4}",
			darkrp_purchase_food                           = "{1} purchased food {2} for {3}",
			darkrp_weapons_checked                         = "{1} checked the weapons of {2}",
			darkrp_weapons_confiscated                     = "{1} confiscated the weapons of {2}",
			darkrp_weapons_returned                        = "{1} returned the confiscated weapons of {2}",
			darkrp_filed_warant                            = "{1} filed a warrant on {2} for: {3}",
			darkrp_warrant_cancelled                       = "{1} cancelled a warrant on {2}",
			darkrp_set_wanted                              = "{1} set {2} as wanted for {3}",
			darkrp_cancelled_wanted                        = "{1} cancelled the wanted status of {2}",
			darkrp_auto_cancelled_wanted                   = "{1} lost their wanted status",
			darkrp_starved                                 = "{1} starved",
			darkrp_pocket_added                            = "{1} put {2} in their pocket",
			darkrp_pocket_dropped                          = "{1} dropped {2} from their pocket",
			darkrp_rpname_change                           = "{1} changed their RP name from {2} to {3}",
			darkrp_started_lockpick_owned_entity           = "{1} started lockpicking {2} owned by {3}",
			darkrp_started_lockpick_unowned_entity         = "{1} started lockpicking unowned {2}",
			darkrp_started_lockpick_owned_door             = "{1} started lockpicking a door owned by {2}",
			darkrp_started_lockpick_unowned_door           = "{1} started lockpicking an unowned door",
			darkrp_started_lockpick_own_entity             = "{1} started lockpicking their {2}",
			darkrp_started_lockpick_own_door               = "{1} started lockpicking one of their doors",
			darkrp_successfully_lockpicked_owned_entity    = "{1} successfully lockpicked {2} owned by {3}",
			darkrp_successfully_lockpicked_unowned_entity  = "{1} successfully lockpicked unowned {2}",
			darkrp_successfully_lockpicked_owned_door      = "{1} successfully lockpicked a door owned by {2}",
			darkrp_successfully_lockpicked_unowned_door    = "{1} successfully lockpicked an unowned door",
			darkrp_successfully_lockpicked_own_entity      = "{1} successfully lockpicked their {2}",
			darkrp_successfully_lockpicked_own_door        = "{1} successfully lockpicked one of their doors",
			darkrp_failed_lockpick_owned_entity            = "{1} failed to lockpick {2} owned by {3}",
			darkrp_failed_lockpick_unowned_entity          = "{1} failed to lockpick unowned {2}",
			darkrp_failed_lockpick_owned_door              = "{1} failed to lockpick a door owned by {2}",
			darkrp_failed_lockpick_unowned_door            = "{1} failed to lockpick an unowned door",
			darkrp_failed_lockpick_own_entity              = "{1} failed to lockpick their {2}",
			darkrp_failed_lockpick_own_door                = "{1} failed to lockpick one of their doors",
			darkrp_changed_job                             = "{1} changed job from {2} to {3}",
			darkrp_added_law                               = "{1} added law: {2}",
			darkrp_removed_law                             = "{1} removed law: {2}",
			darkrp_sold_door                               = "{1} sold a door",
			darkrp_bought_door                             = "{1} bought a door",
			darkrp_dropped_money                           = "{1} dropped {2}",
			darkrp_picked_up_money                         = "{1} picked up {2}",
			darkrp_picked_up_money_dropped_by              = "{1} picked up {2} which was dropped by {3}",
			darkrp_gave_money                              = "{1} gave {2} to {3}",
			darkrp_afk_demoted                             = "{1} was demoted for being AFK",
			darkrp_lottery_started                         = "{1} started a lottery with an entry price of {2}",
			darkrp_lottery_ended                           = "{1} won {2} from the lottery!",
			darkrp_lottery_fail                            = "The lottery failed to find a winner",
 
			pvp_instigator_killed_noweapon                 = "{1} {2} finished combat and KILLED {3} {4} after {5}", -- after X seconds/minutes/hours
			pvp_instigator_killed_weapon                   = "{1} {2} finished combat using {3} and KILLED {4} {5} after {6}",
			pvp_instigator_killed_weapons                  = "{1} {2} finished combat using multiple weapons and KILLED {3} {4} after {5}",
			pvp_victim_killed_noweapon                     = "{1} {2} finished combat and GOT KILLED BY {3} {4} after {5}",
			pvp_victim_killed_weapon                       = "{1} {2} finished combat using {3} and GOT KILLED BY {4} {5} after {6}",
			pvp_victim_killed_weapons                      = "{1} {2} finished combat using multiple weapons and GOT KILLED BY {3} {4} after {5}",
			pvp_combat_noweapon                            = "{1} {2} finished combat with {3} {4} after {5}",
			pvp_combat_weapon                              = "{1} {2} finished combat using {3} with {4} {5} after {6}",
			pvp_combat_weapons                             = "{1} {2} finished combat using multiple weapons with {3} {4} after {5}",
			pvp_log_noweapon                               = "{1} hit {2} for {3} damage",
			pvp_log_weapon                                 = "{1} hit {2} for {3} damage using a {4}",
			pvp_killed                                     = "{1} killed {2}",
			pvp_vehicle_owned_killed                       = "{1} was hit & killed by {2} with no driver but owned by {3}",
			pvp_vehicle_owned_damaged                      = "{1} was hit for {2} damage by {3} with no driver but owned by {4}",
			pvp_vehicle_killed                             = "{1} was hit & killed by {2} with no driver and owned by nobody",
			pvp_vehicle_damaged                            = "{1} was hit for {2} damage by {3} with no driver and owned by nobody",
			pvp_killed_self                                = "{1} killed themselves",
			pvp_damaged_self                               = "{1} damaged themselves for {2} damage",
 
			changed_team                                   = "{1} changed team from {2} to {3}",
			command_used                                   = "{1}: {2}",
			warned_reason                                  = "{1} was warned by {2} for {3}",
			warned_noreason                                = "{1} was warned by {2}",
			warned_kicked                                  = "{1} was KICKED for breaching the active warning threshold",
			warned_banned                                  = "{1} was BANNED for breaching the active warning threshold",
			handcuffed                                     = "{1} handcuffed {2}",
			handcuffs_broken_by                            = "{1} broke {2} out of handcuffs",
			handcuffs_broken                               = "{1} broke out of their handcuffs",
			npc_health_bought                              = "{1} bought health from an NPC for {2}",
			npc_armor_bought                               = "{1} bought armor from an NPC for {2}",
			pac_outfit                                     = "{1} switched to PAC outfit {2}",
			party_chat                                     = "{1} ({2}): {3}",
			party_created                                  = "{1} created party {2}",
			party_join                                     = "{1} joined party {2}",
			party_join_request                             = "{1} requested to join party {2}",
			party_invite                                   = "{1} invited {2} to party {3}",
			party_leave                                    = "{1} left party {2}",
			party_kick                                     = "{1} kicked {2} from party {3}",
			party_disbanded                                = "{1} disbanded party {2}",
			party_abandoned                                = "{1} left the server and abandoned their party {2}",
			spraymesh                                      = "{1} used their spray {2}",
			starwarsvehicle_damage_owned_weapon            = "{1} damaged Star Wars vehicle {2} owned by {3} for {4} damage with {5}",
			starwarsvehicle_damage_owned                   = "{1} damaged Star Wars vehicle {2} owned by {3} for {4} damage",
			starwarsvehicle_damage_weapon                  = "{1} damaged Star Wars vehicle {2} for {3} damage with {4}",
			starwarsvehicle_damage                         = "{1} damaged Star Wars vehicle {2} for {3} damage",
			wac_damage_owned_weapon                        = "{1} damaged WAC aircraft {2} owned by {3} for {4} damage with {5}",
			wac_damage_owned                               = "{1} damaged WAC aircraft {2} owned by {3} for {4} damage",
			wac_damage_weapon                              = "{1} damaged WAC aircraft {2} for {3} damage with {4}",
			wac_damage                                     = "{1} damaged WAC aircraft {2} for {3} damage",
			wyozi_cinema_queued                            = "{1} requested video {2} ➞ {3} at cinema {4}",
			wyozi_dj_queued                                = "{1} queued {2} ➞ {3} on channel {4}",
			wyozi_dj_channel_rename                        = "{1} renamed a channel to {2}",
 
			bwhitelist_whitelist_enabled_by                = "{1} enabled the whitelist for {2}",
			bwhitelist_whitelist_enabled                   = "The whitelist for {1} was enabled",
			bwhitelist_whitelist_disabled_by               = "{1} disabled the whitelist for {2}",
			bwhitelist_whitelist_disabled                  = "The whitelist for {1} was disabled",
 
			bwhitelist_blacklist_enabled_by                = "{1} enabled the blacklist for {2}",
			bwhitelist_blacklist_enabled                   = "The blacklist for {1} was enabled",
			bwhitelist_blacklist_disabled_by               = "{1} disabled the blacklist for {2}",
			bwhitelist_blacklist_disabled                  = "The blacklist for {1} was disabled",
 
			bwhitelist_added_to_whitelist_by               = "{1} was added to the whitelist for {2} by {3}",
			bwhitelist_added_to_whitelist                  = "{1} was added to the whitelist for {2}",
			bwhitelist_removed_from_whitelist_by           = "{1} was removed from the whitelist for {2} by {3}",
			bwhitelist_removed_from_whitelist              = "{1} was removed from the whitelist for {2}",
			bwhitelist_added_to_blacklist_by               = "{1} was added to the blacklist for {2} by {3}",
			bwhitelist_added_to_blacklist                  = "{1} was added to the blacklist for {2}",
			bwhitelist_removed_from_blacklist_by           = "{1} was removed from the blacklist for {2} by {3}",
			bwhitelist_removed_from_blacklist              = "{1} was removed from the blacklist for {2}",
 
			bwhitelist_added_to_whitelist_by_usergroup     = "Usergroup {1} was added to the whitelist for {2} by {3}",
			bwhitelist_added_to_whitelist_usergroup        = "Usergroup {1} was added to the whitelist for {2}",
			bwhitelist_removed_from_whitelist_by_usergroup = "Usergroup {1} was removed from the whitelist for {2} by {3}",
			bwhitelist_removed_from_whitelist_usergroup    = "Usergroup {1} was removed from the whitelist for {2}",
			bwhitelist_added_to_blacklist_by_usergroup     = "Usergroup {1} was added to the blacklist for {2} by {3}",
			bwhitelist_added_to_blacklist_usergroup        = "Usergroup {1} was added to the blacklist for {2}",
			bwhitelist_removed_from_blacklist_by_usergroup = "Usergroup {1} was removed from the blacklist for {2} by {3}",
			bwhitelist_removed_from_blacklist_usergroup    = "Usergroup {1} was removed from the blacklist for {2}",
 
			bwhitelist_added_to_whitelist_by_luafunc       = "Lua function {1} was added to the whitelist for {2} by {3}",
			bwhitelist_added_to_whitelist_luafunc          = "Lua function {1} was added to the whitelist for {2}",
			bwhitelist_removed_from_whitelist_by_luafunc   = "Lua function {1} was removed from the whitelist for {2} by {3}",
			bwhitelist_removed_from_whitelist_luafunc      = "Lua function {1} was removed from the whitelist for {2}",
			bwhitelist_added_to_blacklist_by_luafunc       = "Lua function {1} was added to the blacklist for {2} by {3}",
			bwhitelist_added_to_blacklist_luafunc          = "Lua function {1} was added to the blacklist for {2}",
			bwhitelist_removed_from_blacklist_by_luafunc   = "Lua function {1} was removed from the blacklist for {2} by {3}",
			bwhitelist_removed_from_blacklist_luafunc      = "Lua function {1} was removed from the blacklist for {2}",

			pvp_combat_begin = "{1} instigated combat against {2}",
			pvp_combat_end   = "The combat instigated by {1} against {2} has ended",

			pvp_player_damage_weapon = "{1} damaged {2} with a {3}",
			pvp_player_damage = "{1} damaged {2}",
			pvp_misc_dmg = "{1} was damaged by {2}",
			pvp_fall_damage = "{1} took fall damage",
			pvp_world_crush_damage = "{1} was crushed against the world",
			pvp_world_damage = "{1} was damaged by the world",
			pvp_prop_self_damage = "{1} damaged themself with prop {2}",
			pvp_prop_damage = "{1} was damaged by prop {2} created by {3}",
			pvp_world_prop_damage = "{1} was damaged by world prop {2}",
			pvp_dmg_self = "{1} damaged themself",
			pvp_vehicle_damage = "{1} was damaged by vehicle {2} driven by {3}",
			pvp_driverless_vehicle_damage = "{1} was damaged by vehicle {2} driven by no one",
			pvp_vehicle_damage_self = "{1} was damaged by crashing their vehicle {2}",

			pvp_player_silent_death = "{1} was silently killed",
			pvp_death_propkill_self = "{1} propkilled themself with {2}",
			pvp_death_propkill_world = "{1} was propkilled by world prop {2}",
			pvp_death_propkill = "{1} was propkilled by {2} using prop {3}",
			pvp_death_player = "{1} was killed by {2}",
			pvp_death_player_weapon = "{1} was killed by {2} with a {3}",
			pvp_death_world = "{1} was killed by the world",
			pvp_death = "{1} was killed",
			
			pvp_misc_dmg_prop = "{1} took {2} from world prop {3}",
			pvp_misc_dmg_attacker = "{1} took {2} from {3}",
			pvp_misc_dmg_other = "{1} took {2}",

			steamfam = "{1} is Steam Family sharing with {2}",
		},

		pvp_dmgtype_generic = "%u damage",
		pvp_dmgtype_burn = "%u burn damage",
		pvp_dmgtype_crush = "%u crush damage",
		pvp_dmgtype_fall = "%u fall damage",
		pvp_dmgtype_bullet = "%u bullet damage",
		pvp_dmgtype_slash = "%u slash damage",
		pvp_dmgtype_vehicle = "%u vehicle damage",
		pvp_dmgtype_blast = "%u explosion damage",
		pvp_dmgtype_club = "%u club damage",
		pvp_dmgtype_shock = "%u electric shock damage",
		pvp_dmgtype_sonic = "%u sonic damage",
		pvp_dmgtype_energybeam = "%u laser damage",
		pvp_dmgtype_drown = "%u drowning damage",
		pvp_dmgtype_nervegas = "%u neurotoxin damage",
		pvp_dmgtype_poison = "%u poison damage",
		pvp_dmgtype_radiation = "%u radiation damage",
		pvp_dmgtype_acid = "%u chemical damage",
		pvp_dmgtype_gravgun = "%u gravity gun damage",
		pvp_dmgtype_plasma = "%u plasma damage",
		pvp_dmgtype_airboat = "%u airboat gun damage",
		pvp_dmgtype_buckshot = "%u buckshot bullet damage",
		pvp_dmgtype_sniper = "%u sniper bullet damage",

} end }